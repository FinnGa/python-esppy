<project name='secondary' index='pi_EMPTY' pubsub='auto' threads='4'>
    <contqueries>
        <contquery name='cq'>
            <windows>
                <window-source name='preparedTrades' insert-only='true'>
                    <schema-string>id*:int64,broker:int32,brokerAddress:string,brokerEmail:string,brokerMms:string,brokerName:string,brokerPhone:string,brokerSms:string,brokerage:string,buyer:int32,buysellflg:int32,closeSeconds:int64,closeTimeGMT:string,currency:int32,msecs:int32,openSeconds:int64,openTimeGMT:string,price:double,quant:int32,seller:int32,symbol:string,time:int64,venue:int32,city:string,lat:double,lon:double,restricted:int32,date:string,tradeSeconds:int32,timeAfterOpen:int32,timeTillClose:int32</schema-string>
                </window-source>
                <window-filter name='restrictedTrades'>
                    <expression>restricted==1</expression>
                </window-filter>
                <window-filter name='openMarking'>
                    <expression><![CDATA[timeAfterOpen > 0 and timeAfterOpen < 60 and quant >= 30000]]></expression>
                </window-filter>
                <window-filter name='closeMarking'>
                    <expression><![CDATA[timeTillClose > 0 and timeTillClose < 60 and quant >= 70000]]></expression>
                </window-filter>
                <window-functional name='brokerAlerts'>
                    <schema-string>id*:string,violation:string,broker:int32,brokerName:string,frontRunningBuy:int32,frontRunningSell:int32,openMarking:int32,closeMarking:int32,restrictedTrades:int32,total:int32,city:string,lat:double,lon:double</schema-string>
                    <function-context>
                        <functions>
                            <function name='id'>guid()</function>
                            <function name='violation'>input()</function>
                            <function name='frontRunningBuy'>integer(equals($violation,'frontRunningBuy'))</function>
                            <function name='frontRunningSell'>integer(equals($violation,'frontRunningSell'))</function>
                            <function name='openMarking'>integer(equals($violation,'openMarking'))</function>
                            <function name='closeMarking'>integer(equals($violation,'closeMarking'))</function>
                            <function name='restrictedTrades'>integer(equals($violation,'restrictedTrades'))</function>
                            <function name='total'>1</function>
                        </functions>
                    </function-context>
                </window-functional>
                <window-functional name='violations'>
                    <schema>
                        <fields>
                            <field name='id' type='string' key='true'/>
                            <field name='violation' type='string'/>
                        </fields>
                    </schema>
                    <function-context>
                        <functions>
                            <function name='id'>guid()</function>
                            <function name='violation'>input()</function>
                        </functions>
                    </function-context>
                </window-functional>
                <window-aggregate name='brokerAlertsAggr' index='pi_HASH'>
                    <schema-string>brokerName*:string,frontRunningBuy:int32,frontRunningSell:int32,openMarking:int32,closeMarking:int32,restrictedTrades:int32,total:int32</schema-string>
                    <output>
                        <field-expr>ESP_aSum(frontRunningBuy)</field-expr>
                        <field-expr>ESP_aSum(frontRunningSell)</field-expr>
                        <field-expr>ESP_aSum(openMarking)</field-expr>
                        <field-expr>ESP_aSum(closeMarking)</field-expr>
                        <field-expr>ESP_aSum(restrictedTrades)</field-expr>
                        <field-expr>ESP_aSum(total)</field-expr>
                    </output>
                </window-aggregate>
                <window-functional name='brokerViolations'>
                    <schema-string>id*:string,violation:string,broker:int32,brokerName:string,frontRunningBuy:int32,frontRunningSell:int32,openMarking:int32,closeMarking:int32,restrictedTrades:int32,total:int32</schema-string>
                    <function-context>
                        <functions>
                            <function name='id'>guid()</function>
                            <function name='frontRunningBuy'>integer(equals($violation,'frontRunningBuy'))</function>
                            <function name='frontRunningSell'>integer(equals($violation,'frontRunningSell'))</function>
                            <function name='openMarking'>integer(equals($violation,'openMarking'))</function>
                            <function name='closeMarking'>integer(equals($violation,'closeMarking'))</function>
                            <function name='restrictedTrades'>integer(equals($violation,'restrictedTrades'))</function>
                            <function name='total'>1</function>
                        </functions>
                    </function-context>
                </window-functional>
                <window-aggregate name='brokerViolationsAggr' index='pi_HASH'>
                    <schema-string>brokerName*:string,frontRunningBuy:int32,frontRunningSell:int32,openMarking:int32,closeMarking:int32,restrictedTrades:int32,total:int64</schema-string>
                    <output>
                        <field-expr>ESP_aSum(frontRunningBuy)</field-expr>
                        <field-expr>ESP_aSum(frontRunningSell)</field-expr>
                        <field-expr>ESP_aSum(openMarking)</field-expr>
                        <field-expr>ESP_aSum(closeMarking)</field-expr>
                        <field-expr>ESP_aSum(restrictedTrades)</field-expr>
                        <field-expr>ESP_aSum(total)</field-expr>
                    </output>
                </window-aggregate>

                <window-aggregate name='venueAlertsAggr' index='pi_HASH'>
                    <schema-string>city*:string,lat:double,lon:double,count:int32</schema-string>
                    <output>
                        <field-expr>ESP_aFirst(lat)</field-expr>
                        <field-expr>ESP_aFirst(lon)</field-expr>
                        <field-expr>ESP_aCount()</field-expr>
                    </output>
                </window-aggregate>
                <window-pattern name='frontRunning'>
                    <splitter-expr>
                        <expression>slot</expression>
                    </splitter-expr>
                    <schema>
                        <fields>
                            <field name='id' type='int64' key='true'/>
                            <field name='broker' type='int32'/>
                            <field name='brokerName' type='string'/>
                            <field name='email' type='string'/>
                            <field name='phone' type='string'/>
                            <field name='sms' type='string'/>
                            <field name='mms' type='string'/>
                            <field name='customer' type='int32'/>
                            <field name='symbol' type='string'/>
                            <field name='tstamp1' type='string'/>
                            <field name='tstamp2' type='string'/>
                            <field name='tstamp3' type='string'/>
                            <field name='tradeId1' type='int64'/>
                            <field name='tradeId2' type='int64'/>
                            <field name='tradeId3' type='int64'/>
                            <field name='price1' type='double'/>
                            <field name='price2' type='double'/>
                            <field name='price3' type='double'/>
                            <field name='quant1' type='int32'/>
                            <field name='quant2' type='int32'/>
                            <field name='quant3' type='int32'/>
                            <field name='slot' type='int32'/>
                        </fields>
                    </schema>
                    <patterns>
                        <pattern index='broker,symbol'>
                            <events>
                                <event name='e1' source='preparedTrades'>((buysellflg == 1) and (broker == buyer) and (s == symbol) and (b == broker) and (p == price))</event>
                                <event name='e2' source='preparedTrades'>((buysellflg == 1) and (broker != buyer) and (s == symbol) and (b == broker))</event>
                                <event name='e3' source='preparedTrades'><![CDATA[((buysellflg == 0) and (broker == seller) and (s == symbol) and (b == broker) and (p < price))]]></event>
                            </events>
                            <logic>fby{1 hour}(fby{1 hour}(e1,e2),e3)</logic>
                            <output>
                                <field-selection name='broker' node='e1'/>
                                <field-selection name='brokerName' node='e1'/>
                                <field-selection name='brokerEmail' node='e1'/>
                                <field-selection name='brokerPhone' node='e1'/>
                                <field-selection name='brokerSms' node='e1'/>
                                <field-selection name='brokerMms' node='e1'/>
                                <field-selection name='buyer' node='e2'/>
                                <field-selection name='symbol' node='e1'/>
                                <field-selection name='date' node='e1'/>
                                <field-selection name='date' node='e2'/>
                                <field-selection name='date' node='e3'/>
                                <field-selection name='id' node='e1'/>
                                <field-selection name='id' node='e2'/>
                                <field-selection name='id' node='e3'/>
                                <field-selection name='price' node='e1'/>
                                <field-selection name='price' node='e2'/>
                                <field-selection name='price' node='e3'/>
                                <field-selection name='quant' node='e1'/>
                                <field-selection name='quant' node='e2'/>
                                <field-selection name='quant' node='e3'/>
                                <field-expr node='e1'>1</field-expr>
                            </output>
                        </pattern>
                        <pattern index='broker,symbol'>
                            <events>
                                <event name='e1' source='preparedTrades'>((buysellflg == 0) and (broker == seller) and (s == symbol) and (b == broker))</event>
                                <event name='e2' source='preparedTrades'>((buysellflg == 0) and (broker != seller) and (s == symbol) and (b == broker))</event>
                            </events>
                            <logic>fby{10 minutes}(e1,e2)</logic>
                            <output>
                                <field-selection name='broker' node='e1'/>
                                <field-selection name='brokerName' node='e1'/>
                                <field-selection name='brokerEmail' node='e1'/>
                                <field-selection name='brokerPhone' node='e1'/>
                                <field-selection name='brokerSms' node='e1'/>
                                <field-selection name='brokerMms' node='e1'/>
                                <field-selection name='seller' node='e2'/>
                                <field-selection name='symbol' node='e1'/>
                                <field-selection name='date' node='e1'/>
                                <field-selection name='date' node='e2'/>
                                <field-expr node='e1'></field-expr>
                                <field-selection name='id' node='e1'/>
                                <field-selection name='id' node='e2'/>
                                <field-expr node='e1'>0</field-expr>
                                <field-selection name='price' node='e1'/>
                                <field-selection name='price' node='e2'/>
                                <field-expr node='e1'>0</field-expr>
                                <field-selection name='quant' node='e1'/>
                                <field-selection name='quant' node='e2'/>
                                <field-expr node='e1'>0</field-expr>
                                <field-expr node='e1'>2</field-expr>
                            </output>
                        </pattern>
                    </patterns>
                </window-pattern>
                <window-copy name='frontRunningBuy'/>
                <window-copy name='frontRunningSell'/>
                <window-aggregate name='violationCounts' index='pi_HASH'>
                    <schema>
                        <fields>
                            <field name='violation' type='string' key='true'/>
                            <field name='count' type='int32'/>
                        </fields>
                    </schema>
                    <output>
                        <field-expr>ESP_aCount()</field-expr>
                    </output>
                </window-aggregate>
            </windows>
            <edges>
                <edge source='preparedTrades' target='restrictedTrades openMarking closeMarking frontRunning'/>
                <edge source='frontRunning' target='frontRunningBuy' slot='1'/>
                <edge source='frontRunning' target='frontRunningSell' slot='2'/>
                <edge source='restrictedTrades openMarking closeMarking frontRunningBuy frontRunningSell' target='brokerAlerts violations'/>
                <edge source='brokerAlerts' target='brokerAlertsAggr'/>
                <edge source='violations' target='violationCounts'/>
            </edges>
        </contquery>
    </contqueries>
</project>
