<engine>
 <description>
  This is a simple example that has one source window with a database connector
  subscribed.  Events are sent to a database table as they are received by the
  source window.  The database connector must be updated for this model to be
  run successfully.


  engine element creates the single engine top level container which sets up dfESP
  fundamental services such as licensing, logging, pub/sub, ...
  This single engine instance wraps one or more projects, that wrap
  one or more continuous queries and different types of windows.
 </description>
 <projects>
  <project name='db_conn_sub_xml' pubsub='auto' threads='1'>
   <description>
    This is to create a project. Project specifies a container
    that holds one or more continuous queries and are backed by a
    thread pool of user defined size. One can specify the pubsub
    port and type, number of threads for the project, index type
    and if using Tag Token data flow model.
   </description>
   <contqueries>
    <contquery name='Continuous_Query_1' trace='tradesWindow'>
     <description>
      This specifies the continuous query container that holds
      a collection of windows and enables one to specify the
      connectivity between windows. One can turn on tracing
      for a list of window and specifies the index type for
      windows in the query.
     </description>
     <windows>
      <window-source name='tradesWindow' index='pi_HASH' collapse-updates='true'>
       <description>
        This defines a source window. All event streams must
        enter continuous queries by being published or
        injected into a source window.
       </description>
       <schema>
        <fields>
         <field name='ID' type='int32' key='true'/>
         <field name='symbol' type='string'/>
         <field name='currency' type='int32'/>
         <field name='udate' type='date'/>
         <field name='msecs' type='int32'/>
         <field name='price' type='double'/>
         <field name='quant' type='int32'/>
         <field name='venue' type='int32'/>
         <field name='broker' type='int32'/>
         <field name='buyer' type='int32'/>
         <field name='seller' type='int32'/>
         <field name='buysellflg' type='int32'/>
        </fields>
       </schema>
       <connectors>
        <connector name='db_sub' class='db'>
         <properties>
          <property name='type'><![CDATA[sub]]></property>
          <property name='snapshot'><![CDATA[true]]></property>
          <property name='connectstring'><![CDATA[DSN=Oracle Wire Protocol;uid=username;pwd=password]]></property>
          <property name='desttablename'><![CDATA[trades]]></property>
         </properties>
        </connector>
        <connector name='pub_fs' class='fs'>
         <properties>
          <property name='type'>pub</property>
          <property name='fsname'>@ESPTESTDATA@/db_connector_subscriber_data.bin</property>
          <property name='fstype'>binary</property>
         </properties>
        </connector>
       </connectors>
      </window-source>
     </windows>
    </contquery>
   </contqueries>
   <project-connectors>
    <connector-groups>
     <connector-group name='CG_sub'>
      <connector-entry connector='Continuous_Query_1/tradesWindow/db_sub' state='running'/>
     </connector-group>
     <connector-group name='CG_pub'>
      <connector-entry connector='Continuous_Query_1/tradesWindow/pub_fs' state='finished'/>
     </connector-group>
    </connector-groups>
    <edges>
     <edge source='CG_sub' target='CG_pub'/>
    </edges>
   </project-connectors>
  </project>
 </projects>
</engine>

