<engine>
 <description>
  This is a simple example that has one source window and one aggregate
  window. The aggregate window has two user defined aggregate
  functions to calculate the non-key fields. The key field is what
  is aggregated on.

  engine element creates the single engine top level container which sets up dfESP
  fundamental services such as licensing, logging, pub/sub, ...
  This single engine instance wraps one or more projects, that wrap
  one or more continuous queries and different types of windows.
 </description>
 <projects>
  <project name='project' pubsub='auto' threads='1'>
   <description>
    This is to create a project. Project specifies a container
    that holds one or more continuous queries and are backed by a
    thread pool of user defined size. One can specify the pubsub
    port and type, number of threads for the project, index type
    and if using Tag Token data flow model.
   </description>
   <contqueries>
    <contquery name='contQuery' trace='sw_01 aw_01'>
     <description>
      This specifies the continuous query container that holds
      a collection of windows and enables one to specify the
      connectivity between windows. One can turn on tracing
      for a list of window and specifies the index type for
      windows in the query.
     </description>
     <windows>
      <window-source name='sw_01'>
       <description>
        This defines a source window. All event streams must
        enter continuous queries by being published or
        injected into a source window.
       </description>
       <schema-string>ID*:int32,symbol:string,quantity:int32,price:double</schema-string>
       <connectors>
        <connector class='fs' name='pub'>
         <properties>
          <property name='type'>pub</property>
          <property name='fstype'>csv</property>
          <property name='fsname'>@ESPTESTDATA@/aggregate_userdef_data.csv</property>
          <property name='transactional'>true</property>
          <property name='blocksize'>1</property>
         </properties>
        </connector>
       </connectors>
      </window-source>
      <window-aggregate name='aw_01'>
       <description>
        This is an aggregate window with user defined aggregation
        functions.
       </description>
       <schema>
        <fields>
         <field name='symbol' type='string' key='true'/>
         <field name='totalQuant' type='int32'/>
         <field name='totalQuantA' type='int32'/>
        </fields>
       </schema>
       <output>
        <field-expr>USER_uSum_nadd(2)</field-expr>
        <field-expr>USER_uSum_add(2)</field-expr>
       </output>
       <connectors>
        <connector class='fs' name='sub'>
         <properties>
          <property name='type'>sub</property>
          <property name='fstype'>csv</property>
          <property name='fsname'>result.out</property>
          <property name='snapshot'>true</property>
         </properties>
        </connector>
       </connectors>
      </window-aggregate>
     </windows>
     <edges>
      <description>
       This fully specifies the continuous query with window
       connectivity, which is a directed graph.
      </description>
      <edge source='sw_01' target='aw_01'/>
     </edges>
    </contquery>
   </contqueries>
   <project-connectors>
    <connector-groups>
     <connector-group name='sub1'>
      <connector-entry connector='contQuery/aw_01/sub' state='running'/>
     </connector-group>
     <connector-group name='pub1'>
      <connector-entry connector='contQuery/sw_01/pub' state='finished'/>
     </connector-group>
    </connector-groups>
    <edges>
     <edge source='sub1' target='pub1'/>
    </edges>
   </project-connectors>
  </project>
 </projects>
</engine>

