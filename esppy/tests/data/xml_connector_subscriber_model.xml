<engine port='55555'>
 <description>
  This is a simple example that has a source windows and two
  connectors. The publish connector reads input events from a csv file and
  publishes to the source window.  The subscriber connector writes the events
  to a file in XML format.


  engine element create the single engine top level container which sets up dfESP
  fundamental services such as licensing, logging, pub/sub, ...
  This single engine instance wraps one or more projects, that wrap
  one or more continuous queries and different types of windows.
 </description>
 <projects>
  <project name='xml_connector_subscriber' pubsub='auto' threads='1'>
   <description>
    This is to create a project. Project specifies a container
    that holds one or more continuous queries and are backed by a
    thread pool of user defined size. One can specify the pubsub
    port and type, number of threads for the project, index type
    and if using Tag Token data flow model.
   </description>
   <contqueries>
    <contquery name='cq_01' trace='tradesWindow'>
     <description>
      This specifies the continuous query container that holds
      a collection of windows and enables one to specify the
      connectivity between windows. One can turn on tracing
      for a list of window and specifies the index type for
      windows in the query.
     </description>
     <windows>
      <window-source name='tradesWindow' index='pi_HASH' pubsub='true' collapse-updates='true'>
       <description>
        This defines a source window. All event streams must
        enter continuous queries by being published or
        injected into a source window.
       </description>
       <schema>
        <fields>
         <field name='ID' type='int32' key='true'/>
         <field name='symbol' type='string'/>
         <field name='currency' type='int32'/>
         <field name='udate' type='stamp'/>
         <field name='msecs' type='int32'/>
         <field name='price' type='double'/>
         <field name='quant' type='int32'/>
         <field name='venue' type='int32'/>
         <field name='broker' type='int32'/>
         <field name='buyer' type='int32'/>
         <field name='seller' type='int32'/>
         <field name='buysellflg' type='int32'/>
        </fields>
       </schema>
       <connectors>
        <connector name='trades_pub' class='fs'>
         <properties>
          <property name='type'>pub</property>
          <property name='fsname'>@ESPTESTDATA@/xml_connector_subscriber_data.csv</property>
          <property name='fstype'><![CDATA[csv]]></property>
         </properties>
        </connector>
        <connector name='trades_sub' class='fs'>
         <properties>
          <property name='type'>sub</property>
          <property name='snapshot'><![CDATA[true]]></property>
          <property name='fsname'><![CDATA[result.out]]></property>
          <property name='fstype'><![CDATA[xml]]></property>
          <property name='dateformat'><![CDATA[%Y-%m-%d %H:%M:%S]]></property>
         </properties>
        </connector>
       </connectors>
      </window-source>
     </windows>
    </contquery>
   </contqueries>
   <project-connectors>
    <connector-groups>
     <connector-group name='cg_pub_01'>
      <connector-entry connector='cq_01/tradesWindow/trades_pub' state='finished'/>
     </connector-group>
     <connector-group name='cg_sub_01'>
      <connector-entry connector='cq_01/tradesWindow/trades_sub' state='running'/>
     </connector-group>
    </connector-groups>
    <edges>
     <edge source='cg_sub_01' target='cg_pub_01'/>
    </edges>
   </project-connectors>
  </project>
 </projects>
</engine>

