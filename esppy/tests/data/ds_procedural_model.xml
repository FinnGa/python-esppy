<project name='datastep' pubsub='auto' threads='2'>
   <description>
    This project example uses the ESP feature that allows one to write a procedural
    window input handler using DataStep callouts to base SAS. This example is intended
    to provide the skeleton of how you would write such an input handler.  Using this feature
    requires access to a base SAS install.  Please see the user doc Chapter 13 (Creating 
    Procedural Windows - DATA Step Window Handlers) for more information and limitations of 
    this feature.

    ds-initialize is used to set configuration.  Its required but the settings can
    vary, and some are optional with defaults.  Please see the user guide for all settings.

    The DS code element must be specified inside the procedural window.
    It has various attributes that are documented in the user doc, some
    are not.  ds-file identifies which SAS program executes on events that
    are input into the procedural window.
   </description>

   <ds-initialize 
      sas-log-location='./'
      sas-connection-key='5555'
      sas-command='@SAS_PATH@/sas -path @DFESP_HOME@/lib'
   />
                  
   <contqueries>
      <contquery name='datastep'>
         <windows>
            <window-source name='request' >
               <schema-string>id*:int32,a:double,b:double</schema-string>
               <connectors>
                  <connector name='pub_requests' class='fs'>
                     <properties>
                        <property name='type'>pub</property>
                        <property name='fsname'>@ESPTEST_DATA@/ds_procedural_data.csv</property>
                        <property name='fstype'>csv</property>
                        <property name='blocksize'>64</property>
                     </properties>
                  </connector>
               </connectors>
            </window-source>
         
            <window-procedural name='results'>
               <schema-string>id*:int32,score:double</schema-string>
                 <ds-external source='request' trace='true'>
                   <code-file>./score.sas'</code-file>
                 </ds-external>
               <connectors>
                  <connector name='sub_results' class='fs'>
                     <properties>
                        <property name='type'>sub</property>
                        <property name='snapshot'>true</property>
                        <property name='fsname'>results.csv</property>
                        <property name='fstype'>csv</property>
                     </properties>
                  </connector>
               </connectors>
             </window-procedural>   
         </windows>   
         
         <edges>         
               <edge source='request' target='results'/>               
         </edges>
      </contquery>
   </contqueries>                        
</project>
